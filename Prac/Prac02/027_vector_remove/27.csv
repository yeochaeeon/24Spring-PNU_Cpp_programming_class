# erase() 함수 !

vec.erase(3번째 위치) 를 호출하면 3번째 원소를 삭제합니다.
vec.erase(3번째 위치, 5번째 위치) 를 호출하면, 3번째~4번째 위치를 삭제합니다.
std::vector<int> vec = {1, 2, 3, 4, 5};
auto start = vec.begin();
vec.erase(start+2);    //벡터의 인덱스는 0부터 시작함, {1, 2, 4, 5}
vec.erase(start+1, start+3);  // {1, 2, 4, 5}   --> {1, 5}
벡터의 멤버 함수 erase() 의 반환값은 삭제된 곳 다음 원소를 가리키는 이터레이터입니다.

----------------------------------

# remove() 함수 !

Modern C++ 방식으로  #include<algorithm> 에 있는 remove() 함수를 이용하여 컨테이너에서 특정 값을 가지는 원소를 삭제할 수 있습니다.
std::vector<int> vec = {1, 2, 3, 4, 5};
std::remove( vec.begin(), vec.end(), 1 );   // {2, 3, 4, 5, 1}
-> 1을 찾아 맨뒤로 보냄 
-> 반환값 : 5뒤를 가리키는 iterator 
//remove()는 요소를 실제로 제거하지 않고 그냥 끝으로 이동시키는 작업만 함...
//반환값 : 삭제되지 않은 가장 마지막 값의 새로운 위치에서 바로 뒤에 있는 위치의 iterator 반환;
// vector의 size나 capacity 는 줄어들지 않음 

